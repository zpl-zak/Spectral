name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. v1.05)'
        required: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate Release Notes
        id: generate_release_notes
        run: |
          # Get commits since last tag or from beginning if no tags exist
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "## What's Changed" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Spectral ${{ github.event.inputs.version }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
      - name: Setup Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build Windows
        run: ./MAKE.bat
      - name: Archive Windows Artifact
        run: |
          powershell Compress-Archive -Path Spectral.exe -DestinationPath Spectral-Windows.zip
      - name: Upload Windows Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./Spectral-Windows.zip
          asset_name: Spectral-Windows.zip
          asset_content_type: application/zip

  build-ubuntu:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev
      - name: Build Ubuntu
        run: sh MAKE.bat
      - name: Upload Ubuntu Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./Spectral.linux
          asset_name: Spectral.linux
          asset_content_type: application/gzip

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build macOS
        run: sh MAKE.bat
      - name: Upload macOS Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./Spectral.dmg
          asset_name: Spectral-macOS.dmg
          asset_content_type: application/x-apple-diskimage
